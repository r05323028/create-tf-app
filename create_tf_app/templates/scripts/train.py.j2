import tensorflow as tf
from argparse import ArgumentParser
from {{ app_name }} import Estimator
{% block packages %}{% endblock %}


def get_args():
    arg_parser = ArgumentParser()
    arg_parser.add_argument('--learning_rate', type=float, default=0.01, dest='learning_rate')
    arg_parser.add_argument('--batch_size', type=int, default=32, dest='batch_size')
    arg_parser.add_argument('--test_size', type=float, default=0.2, dest='test_size')
    arg_parser.add_argument('--num_epochs', type=int, default=100, dest='num_epochs')
    arg_parser.add_argument('--save_ckpt_steps', type=int, default=5, dest='save_ckpt_steps')
    arg_parser.add_argument('--model_dir', type=str, default='./models/', dest='model_dir')

    return vars(arg_parser.parse_args())

def main(**kwargs):
    '''
    Main function of training a `tf.estimator.Estimator`
    '''
    config = tf.estimator.RunConfig(
        model_dir=kwargs.get('model_dir'),
        save_checkpoints_steps=kwargs.get('save_ckpt_steps'),
    )

    hparams = {
        'learning_rate': kwargs.get('learning_rate'),
        'batch_size': kwargs.get('batch_size'),
        'num_epochs': kwargs.get('num_epochs'),
    }

    estimator = Estimator(
        config=config,
        params=hparams
    )

    # load dataset 
    {% block datasets %}{% endblock %}

    # train the estimator
    {% block train %}{% endblock %}

if __name__ == "__main__":
    kwargs = get_args()
    main(**kwargs)